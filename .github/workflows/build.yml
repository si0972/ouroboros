name: Build Container
on:
  push:
    paths:
      - "Dockerfile*"
      - ouroboros
      - pyouroboros/*
      - .github/workflows/build.yml
    branches:
      - master
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get python version
        id: GetPython
        run: |
          #echo "::set-output name=py_ver::$(grep -Po 'FROM amd64/python:\K[0-9]{1,2}.[0-9]{1,2}.[0-9]{1,2}' Dockerfile)" # May be used after version bump
          echo "::set-output name=py_ver::3.7.8"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.GetPython.outputs.py_ver }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U flake8

      - name: Run Flake
        run: flake8 --max-line-length 120 ouroboros *.py pyouroboros/*.py

  build-and-push-container:
    needs: test
    if: ${{ github.event_name == 'push' && ! contains(toJSON(github.event.commits.*.message), '[ci skip]') }}
    runs-on: ubuntu-20.04

    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      PLATFORM_1: amd64
      PLATFORM_2: arm
      PLATFORM_3: arm64

    steps:
      - uses: actions/checkout@v2

      - name: Create VARS
        env:
          _repo: ${{github.repository}}
          _ref: ${{github.ref}}
        id: vars
        run: |
          echo "::set-output name=repo::$(echo ${_repo} | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=username::$(echo ${_repo} | cut -d/ -f1 | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=branch::$(echo ${_ref} | cut -d/ -f3,4 | sed 's!/!-!' | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=old_tag::$(grep -i version pyouroboros/__init__.py | cut -d \  -f3 | tr -d \")"

      - name: Set tag
        if: github.ref == 'refs/heads/master'
        run: |
          version=${{ steps.vars.outputs.old_tag }}
          a=(${version//./ })
          ((a[2]++))
          echo "::set-output name=branch::$(echo "${a[0]}.${a[1]}.${a[2]}")"
          sed -i "s/${{ steps.vars.outputs.old_tag }}/${{ steps.CreateTag.outputs.version }}/g" pyouroboros/__init__.py

      - name: Push changed files
        if: github.ref == 'refs/heads/master'
        uses: EndBug/add-and-commit@v4
        with:
          add: pyouroboros/__init__.py
          author_name: GHActions
          message: Bump Version
          tag: ${{ steps.CreateTag.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print VARS
        if: "contains(toJSON(github.event.commits.*.msg), '[debug]')"
        run: |
          echo "${{ steps.vars.outputs.branch }} && ${{github.ref}}"
          echo "${{ steps.vars.outputs.username }} && ${{github.repository}}"
          echo ${{ steps.vars.outputs.repo }}

      - name: Set up buildkit
        run: |
          docker run --privileged linuxkit/binfmt:v0.8

      - name: Login to registry
        if: github.event_name != 'pull_request' && contains(github.ref, 'actions') != 'true'
        env:
          DOCKER_USERNAME: roxedus
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      # - name: Build amd64
      #   env:
      #     DOCKERFILE_LOCATION: Dockerfile
      #   run: |
      #     docker build --pull \
      #       --cache-from ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1} \
      #       --tag ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1} \
      #       --file=${DOCKERFILE_LOCATION} \
      #       --platform=${PLATFORM_1} .
      #     docker push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1}
      # - name: Build arm
      #   env:
      #     DOCKERFILE_LOCATION: Dockerfile.arm
      #   run: |
      #     docker build --pull \
      #       --cache-from ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2} \
      #       --tag ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2} \
      #       --file ${DOCKERFILE_LOCATION} \
      #       --platform ${PLATFORM_2} .
      #     docker push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2}
      # - name: Build arm64
      #   env:
      #     DOCKERFILE_LOCATION: Dockerfile.arm64
      #   run: |
      #     docker build --pull \
      #       --cache-from ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3} \
      #       --tag ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3} \
      #       --file ${DOCKERFILE_LOCATION} \
      #       --platform ${PLATFORM_3} .
      #     docker push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3}
      # - name: Create :latest manifest
      #   if: github.ref == 'refs/heads/master'
      #   run: |
      #     docker manifest create ${{ steps.vars.outputs.repo }}:latest \
      #       ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1} \
      #       ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2} \
      #       ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3}
      #     docker manifest push ${{ steps.vars.outputs.repo }}:latest
      # - name: Create branch manifest
      #   run: |
      #     docker manifest create ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }} \
      #       ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1} \
      #       ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2} \
      #       ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3}
      #     docker manifest push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}
